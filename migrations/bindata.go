package migrations

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var __1_init_database_down_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\xe5\x72\x09\xf2\x0f\x50\x70\x0b\xf5\x73\x0e\xf1\xf4\xf7\x53\x48\xcb\x8b\x2f\x2d\x48\x49\x2c\x49\x8d\x2f\xc9\xcc\x4d\x2d\x2e\x49\xcc\x2d\xb0\xe6\x02\x04\x00\x00\xff\xff\x77\x3e\x8a\xb9\x26\x00\x00\x00")

func _1_init_database_down_sql() ([]byte, error) {
	return bindata_read(
		__1_init_database_down_sql,
		"1_init_database.down.sql",
	)
}

var __1_init_database_up_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcb\xc1\x6a\x84\x30\x14\x46\xe1\xfd\x7d\x8a\x9f\x21\x8b\x99\x45\xfb\x02\xa1\x0b\x6b\xef\x48\xa0\xdc\x94\x24\xc3\xb8\x93\x80\x56\x04\xb5\x29\x49\xde\xbf\x88\x5d\x9f\xf3\xb5\x8e\x9b\xc0\xe0\x3e\xb0\x78\x63\x05\xe6\x0e\xb1\x01\xdc\x1b\x1f\x3c\x2e\xb5\x2e\xe3\xcb\x4f\xce\xe9\xa2\x89\xfe\x67\xeb\xe0\xf8\xeb\xb3\x69\x19\xf7\x87\xb4\xe1\x60\xdf\xfb\x50\xd3\x18\xcb\x34\x94\x65\x9b\x72\x89\x5b\xba\xde\xc8\x71\x78\x38\xf1\x08\xce\x74\x1d\x3b\x34\x1e\x4a\xd1\x3b\x77\x46\x08\x80\xf0\xf3\xf5\x54\xe3\x10\x0b\xde\x20\xf6\x79\xbd\x69\x1c\xed\xa4\xc7\xa2\x89\xe5\x43\x93\x52\x58\xe3\x3e\xd7\x38\x4f\x48\x6b\x9a\xf3\xef\x0a\x4d\x7f\x01\x00\x00\xff\xff\x86\x95\xdc\x2a\xc0\x00\x00\x00")

func _1_init_database_up_sql() ([]byte, error) {
	return bindata_read(
		__1_init_database_up_sql,
		"1_init_database.up.sql",
	)
}

var __2_users_table_down_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\xf0\x74\x53\x70\x8d\xf0\x0c\x0e\x09\x56\x50\x2a\x2d\x4e\x2d\x2a\x56\xb2\xe6\x02\x04\x00\x00\xff\xff\xb3\x49\x9e\xd5\x1e\x00\x00\x00")

func _2_users_table_down_sql() ([]byte, error) {
	return bindata_read(
		__2_users_table_down_sql,
		"2_users_table.down.sql",
	)
}

var __2_users_table_up_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x55\x5f\x6f\xda\x3e\x14\x7d\xcf\xa7\x38\xca\x0b\x20\xfd\xd4\x87\x9f\xd6\xa7\x6a\x0f\x29\x98\x36\x1a\x24\x5d\x9a\xac\xed\xa6\x29\xb2\xb0\x01\x6b\x21\x61\xb1\x01\xed\xdb\x4f\x36\xf9\x03\x81\x36\xc9\xde\xea\x9b\x73\xce\x3d\xd7\xe5\x1e\x8f\x03\xe2\x84\x04\xa1\x73\x3f\x23\xb0\x77\x92\xe7\xd2\xc6\xd0\x02\x6c\xc1\x6c\x44\x91\x3b\xc1\x53\xe0\xce\x9d\xe0\x0d\x5f\xc8\x1b\x3c\x3f\x84\x17\xcd\x66\x98\x90\xa9\x13\xcd\x42\x0c\x77\x3b\xc1\xe2\x15\x4f\x79\x4e\x15\x8f\xf7\x9f\x86\xa3\xd1\x7f\x9a\xce\x37\x54\x24\x36\xbe\x39\xc1\xf8\xd1\x09\x86\xff\xdf\xde\x8e\x10\x79\xee\xd7\x88\x54\x22\x06\xa7\x5b\xa6\x74\xc3\x3b\x40\xb7\x54\xca\x43\x96\xb3\x06\xf4\x0c\xb3\x14\xb9\x54\x57\xf4\x2e\x8c\x0f\x06\x06\x9f\xd0\x5e\x70\x33\x55\xbc\xe7\xb9\x58\x0a\xce\x6c\xdc\xfb\xfe\xec\x12\xbc\xa4\x89\xe4\x06\x6f\x90\x7f\x62\x95\xfd\xe2\xa9\x8d\x90\xbc\x86\x1f\x3a\x89\x0b\xbc\xe4\xa9\x8a\xa9\xb2\x11\xba\x73\xf2\x1c\x3a\xf3\xa7\xf0\xfb\xf9\x9c\x39\x5f\x64\x7b\x9e\xf7\x90\xae\x18\xed\xe2\x66\xca\xc5\x9a\xa6\x2b\xde\x5d\xff\x94\xd4\xde\x82\x26\x49\x76\xe0\x2c\x16\x5b\x79\x14\xff\xf1\xb3\xae\x8b\x6d\xf7\xb6\x25\xa1\xbd\x25\xe3\x09\x57\x3d\x06\x2a\xf0\xed\xc2\x8b\x9c\x53\xc5\xd9\xbb\xa0\x7a\x59\xd2\xec\x50\xee\xc7\x6e\xcb\x7a\x91\xac\xd1\x9d\x65\x15\xdb\xea\x7a\x13\xf2\x0a\xdf\xab\x17\xf6\xe4\x77\xff\x31\xae\xfa\xbd\x6b\x98\x65\x8d\xfd\xf9\x9c\x78\xa1\xc6\x8c\xfd\x59\x34\xaf\xa0\x37\x66\xff\xdd\x67\x0c\xf4\x19\x82\x0d\xee\x3e\x44\x17\xeb\x6e\x08\xa9\xf8\xbd\xe3\x30\x15\x50\xc6\x72\x2e\x65\x0b\xbb\x0e\x81\x13\x81\xb2\xd8\xc2\xad\x53\x41\x73\xd7\x54\xae\x39\x43\x59\x6c\xe1\x9e\xa4\x85\x26\x9b\x23\x3a\xf4\xac\x53\x43\xd3\xf4\xa9\x0b\xab\x19\x1e\x9a\x7b\xbc\xa5\xb2\x06\xa9\xa8\xda\xb5\xdd\xd6\x79\xa8\x68\x15\xb9\xce\x72\x85\x44\xec\x39\xc3\xa9\xe2\x82\x2a\x91\xa5\x30\xc8\x0e\x23\x5d\xc4\x4f\x35\xdd\xa5\x1c\x34\x08\x54\x41\x89\x0d\x97\x8a\x6e\xb6\x2d\x0d\x9a\x89\xd5\xf4\x5d\xfe\xcb\x50\x02\xbb\xdb\xbe\x8c\xb6\xca\xf8\x3b\xaa\xbd\xdd\x5f\x89\xc4\xeb\x17\x7f\xc4\x74\xf7\x7e\x35\x36\x2b\xfb\x85\xda\x51\xfa\xdf\x9c\x9f\x25\xad\x11\x16\x52\x21\x5b\x82\x26\x09\x8a\x8f\x10\xdb\x72\x53\xa1\x32\xd0\xc5\xc2\xfc\xb5\x16\x12\x79\x76\xe8\xd2\xa0\x8e\xec\xe6\xb5\x14\x9f\x0b\xf7\xcb\x2c\x2f\x2a\xe9\x0a\x29\x3f\x40\x6c\xbb\x45\xc4\xf5\xb0\xaf\x2e\xca\x7c\x41\xd5\xa6\xef\x25\x9d\xbf\x0d\xcd\x11\x4c\x04\x1a\x48\xaf\x6d\x6a\x3e\x20\x95\xd9\x73\xa9\xde\x66\x4f\xdf\x1b\xad\x59\x9c\xfb\x48\x9c\xbe\x3e\x95\xad\xa2\x78\xa1\x53\x3e\x27\x61\xe0\x3e\x3c\x90\x00\x2a\x5f\xc5\x47\x6c\x5c\xeb\xe0\x9e\x4c\xfd\x80\x20\x7a\x9a\x68\x6c\xfd\xe8\x58\x53\x3f\x00\x71\xc6\x8f\x08\xfc\x17\xbc\x3c\x12\x0f\x43\x7f\x36\xb9\x11\x0c\x9f\xe1\x91\x97\x1b\xc1\x46\x20\xaf\x64\x1c\x85\x04\xd3\xc8\x1b\x87\xae\xef\x61\x99\x96\x2d\x2a\x2b\xc3\xd1\x9d\xf5\x37\x00\x00\xff\xff\x9e\xe1\xc6\xec\xaf\x0a\x00\x00")

func _2_users_table_up_sql() ([]byte, error) {
	return bindata_read(
		__2_users_table_up_sql,
		"2_users_table.up.sql",
	)
}

var __3_sessions_table_down_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\xf0\x74\x53\x70\x8d\xf0\x0c\x0e\x09\x56\x50\x2a\x4e\x2d\x2e\xce\xcc\xcf\x2b\x56\xb2\xe6\x02\x04\x00\x00\xff\xff\x3f\x32\x22\xae\x21\x00\x00\x00")

func _3_sessions_table_down_sql() ([]byte, error) {
	return bindata_read(
		__3_sessions_table_down_sql,
		"3_sessions_table.down.sql",
	)
}

var __3_sessions_table_up_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x94\xcd\x6e\xa3\x30\x10\xc7\xef\x3c\xc5\x5f\x5c\x9a\x48\xab\xbe\x40\xb5\x07\x0a\x93\x16\x2d\x98\x2e\x35\x4a\xba\x17\xc4\xc6\x4e\x62\x35\x85\x08\x7b\x3f\x1e\x7f\x65\x48\x58\x68\x4a\x49\x8e\x1e\xff\xe7\xe7\xf1\x7c\x39\x7e\x4a\x1e\x27\x70\xef\x3e\x22\xb8\x5a\x6a\xad\xaa\x52\xbb\x98\x39\x80\xab\x84\x8b\x2c\x0b\x03\x3c\xa5\x61\xec\xa5\x2f\xf8\x46\x2f\x60\x09\x07\xcb\xa2\xe8\x8b\x55\xd4\x72\x53\x4b\xbd\xcb\x4d\xf5\x2a\x4b\x17\x9c\x56\x7c\x28\x28\xd6\x6b\xa9\x75\x7b\x9f\x77\xbc\x8c\x85\xdf\x33\x1a\x57\x7e\x44\x5a\xef\x95\x2c\x4d\xae\x0e\x1f\x5d\xfe\xd2\xb2\xce\x8b\xad\x2c\xcd\xe8\x6d\xf7\xf8\xe0\xea\xe7\xbe\x5a\xbf\x4a\xe1\xe2\x3e\x49\xa2\xee\x0a\x01\x2d\xbc\x2c\xe2\xd8\x14\x7b\x2d\xcf\x3f\x22\xff\x1e\x54\x2d\x75\x5e\xd8\xe7\xc2\x98\x9e\xb9\x17\x3f\xf1\x1f\x9f\xe4\xe6\x32\x97\x75\x2d\x0b\x23\xc5\xa8\xa8\x8b\x6b\x56\x56\x7f\x66\xf3\x79\xfb\xbb\x83\xb8\xca\xc9\x99\xdf\x39\xce\xa9\xf0\x21\x0b\x68\x85\x84\x0d\x6a\xdf\x25\xcc\x2a\x3f\x15\xbe\x2f\x6f\x8b\x4e\xe2\x98\x18\xb7\x62\x3f\x89\xb2\xb8\xef\x73\xdb\x34\x55\xf8\x8c\x9b\x63\x7a\xd0\xf8\x42\x89\x9b\xbb\x29\xcf\x77\xcd\x76\x06\x99\x26\x9c\x75\xa3\x65\xb4\xc6\x2b\xe2\x18\x76\xaa\x45\xe8\x5d\x55\x1b\xec\xd5\x6f\x29\xd0\xc7\x4d\xb3\x7a\x5d\x6d\x41\xed\x11\xea\x80\x42\x88\x5a\x6a\x3d\x4d\xe8\xb7\x7e\x0f\x61\xcd\x68\xcc\x17\x22\x4e\xe9\x50\x02\xd5\x06\x66\x27\x8f\x08\xad\xd5\xb6\x94\x02\xa6\x82\xd9\x29\x8d\xa3\xdf\x34\xb5\x1b\xad\x26\x43\xad\x1d\x4a\xe3\x68\x47\x55\xa3\xac\x2e\x88\x6e\x74\xf2\x2c\xb7\x39\x17\xc6\xa2\x8d\x7a\x93\x36\xf4\xeb\x0a\x30\x3e\xa5\x63\x78\x5c\xd9\x74\xfd\xa1\x6e\x0a\xd4\x9e\x51\x98\x86\xa9\x4d\xf1\x76\x68\x53\x7e\x4d\x76\xfb\x53\x6f\xa9\xfb\x42\x1b\x1c\x8d\x93\x68\x2f\xe2\x94\x9e\x2f\x7d\x2f\x08\xb0\x48\x52\x0a\x1f\x58\xb3\xea\x7b\x8b\x00\x29\x2d\x28\x25\xe6\xd3\x73\xbb\x4f\x9b\xf1\x1f\xae\x08\x9e\x86\x0f\x0f\x94\xc2\xd4\xdb\xbc\x8d\x24\xff\x1f\x25\xee\xc9\xa2\x91\x3d\x05\x56\x3b\x58\x24\xce\x22\x49\x41\x9e\xff\x88\x34\x59\x62\xf9\x48\x0c\xb3\x24\x0a\x6e\x95\xc0\x57\x30\x5a\xde\x2a\x31\x07\xad\xc8\xcf\x38\x61\x91\x31\x9f\x87\x09\xc3\xa6\x3c\xbd\xd2\xfd\x75\x36\xbf\x73\xfe\x05\x00\x00\xff\xff\xd2\xb9\x90\x77\xd3\x06\x00\x00")

func _3_sessions_table_up_sql() ([]byte, error) {
	return bindata_read(
		__3_sessions_table_up_sql,
		"3_sessions_table.up.sql",
	)
}

var _bindata_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x97\x4b\x8f\x23\xb7\x11\xc7\xcf\xea\x4f\xd1\x11\xe0\x40\x02\x06\x93\x7e\x3f\x0c\xec\xc5\x46\xae\x39\xe4\x9a\x0a\x04\x76\x93\x1c\x08\x99\x91\x66\xf5\xb0\xcb\x1b\xf8\xbb\x07\x3f\x16\x07\xeb\x35\x66\x83\x24\x9b\xc3\xac\x24\x36\xbb\x58\xac\xff\xa3\x6a\x5f\xdd\xfa\x0f\xf7\x14\xca\x97\xe3\xd3\xc5\xdd\x8e\xe7\xd3\xb5\x28\x8e\x2f\xaf\xe7\xcb\xad\xdc\x15\x9b\xed\xf2\xcb\x2d\x5c\xb7\xc5\x66\xbb\x9e\x5f\x5e\x2f\xe1\x7a\xfd\xd3\xd3\xa7\xe3\x2b\x0b\xf1\xe5\xc6\xc7\xf1\xcc\xbf\xd7\xdb\xe5\x78\x7a\xba\x6e\x8b\x7d\x51\xc4\xfb\x69\x2d\x97\xe3\xc9\xbb\x9b\x3b\x5c\x82\xf3\x3b\xbe\x95\x7f\xfb\x3b\xb1\x1e\xca\x93\x7b\x09\xa5\xed\xdf\x97\xbb\xb7\xd5\x70\xb9\x9c\x2f\xfb\xf2\x9f\xc5\xe6\xe9\x53\xfa\x55\x7e\xff\xa1\xe4\xa8\xc7\xbf\x84\x9f\xff\x1a\x9c\x0f\x97\x5d\xca\x85\xdf\x3f\xdc\x63\x0c\x97\x14\x76\xbf\x2f\x36\xc7\x98\x5e\xf8\xc3\x87\xf2\x74\x7c\x26\xc4\xe6\x12\x6e\xf7\xcb\x89\x9f\x0f\x65\x7c\xb9\x3d\xfe\x99\xe8\x71\xb7\x25\x50\xf9\xdd\xc7\xef\xcb\xef\x7e\xda\x5a\x26\xe9\xac\x7d\xb1\xf9\xb5\x28\x36\x3f\xb9\x4b\xb9\xdc\x63\x69\xe7\xd8\x21\xc5\xe6\x60\xe9\x7c\x28\x8f\xe7\xc7\x1f\xcf\xaf\xbf\xec\xfe\xb8\xdc\xe3\x43\xf9\xf4\x69\x4f\xae\x8f\x3f\x3e\x9f\xaf\x61\xb7\x2f\xfe\x7f\x69\xe4\xb7\x96\x7b\x7c\xfc\x81\x4c\x76\xfb\x07\x42\x14\xbf\x16\x05\x19\x1e\x0e\xf5\xe1\x78\x3a\xde\x0e\x5c\x7f\x71\xd7\x70\xf0\xe7\x9f\x4f\x87\xeb\xc7\xe7\xf2\x43\x2e\xf2\x6e\x2b\x5a\x47\xd1\x69\x11\xad\x26\xd1\xaa\x7a\xff\x2f\x46\x51\xdf\x88\xfa\x5e\x34\xf4\xa2\x63\x23\x5a\xcd\xa2\x91\xcf\x28\xda\x57\xa2\x23\x7b\x17\xd1\xc8\xf3\x56\xb4\x0a\xa2\xb1\x16\x8d\x9d\x68\x1c\x45\xfb\x56\xb4\x9b\x44\xd7\xc5\xce\x6b\xa2\x68\xe3\x6d\xad\x9b\x45\x9b\xd5\x3e\x27\x6f\xcf\xd6\x59\x74\x65\xcd\xdb\xbe\x26\xd8\x73\xd6\xf8\xbd\x54\xa2\x61\x10\xad\xc8\xa1\xfb\x32\x57\xfe\xc6\x51\xb4\x0d\xa2\x93\x13\x5d\x88\x3f\xfc\xf6\x4e\xdb\x37\xfe\x7d\xb5\x48\xbb\x77\x49\xf7\x56\xf3\xdf\xb2\xb6\xd8\x6c\xbe\x5e\xeb\x87\x62\xb3\xd9\xfe\xee\xe1\x23\x0f\x1f\xaf\x1f\x9f\xb7\x0f\xc5\x66\xff\x75\xbc\xee\xaf\xff\x33\x5a\x54\x93\x4a\xaf\xb5\xe8\xe0\x44\xa7\x4e\xb4\xad\x44\xeb\x4e\xb4\x1b\x44\x03\xc8\x78\xd1\xd1\x5b\x85\x66\xde\xa9\x2d\xf6\x3c\x8b\x76\xbd\x68\x5c\xac\xba\xae\x36\x64\x87\x45\x34\x44\x43\xcc\x55\xa2\x7e\x15\x9d\x3b\xd1\xa6\x13\x5d\x5b\xd1\x65\x12\x9d\x5b\xd1\xa9\x12\xed\x07\x43\x65\xe9\x45\x9b\xd9\x90\xf3\x41\x74\x21\xff\x49\xb4\xf7\x76\x66\x6c\x6d\xcf\x14\x44\x67\xf2\x05\xd5\xca\x90\x03\xe1\x71\x12\x1d\x60\x53\x9f\xd1\x66\x9d\x7c\x6a\x3b\xbf\x5e\xac\x26\xed\x6a\x0c\x49\xe7\x05\xd1\xd0\xda\xfd\x3b\x98\xc4\xef\x59\xd4\x35\xa2\x13\xac\x0d\xa2\xc3\x28\x1a\x16\x3b\x2b\x4e\xf6\x7d\x69\x45\x87\x59\xb4\x9e\x8d\xb1\xd3\x28\xba\x74\x56\xab\x81\xfb\x46\xab\x09\x6c\xf7\xad\x68\x9d\xd9\xdc\x76\x56\x87\xa1\xb7\x3b\x8c\xf9\x9c\x9e\x98\xce\xee\xbd\x4e\xa2\x63\x6d\xf7\x69\x27\x53\x06\x18\x92\xdb\xd8\x89\xd6\x5e\xb4\xcd\xb1\x6a\x98\xce\x7b\xb5\xad\xc1\x64\x30\x63\x3f\xb5\x8d\x95\xd5\x0d\xa5\xf5\x9d\xdd\xb5\xce\xea\xe3\xac\x86\xe7\x83\xe8\x38\x8b\x2e\x3e\xdf\x69\x15\x0d\x5e\xd4\x81\xd5\xf8\xb9\x16\xa8\xb9\x6b\x0d\xb7\xbe\x11\xed\x27\x8b\x47\xfd\xfd\x68\xb9\x76\x19\x73\xf0\x9f\x9d\x9d\x0d\x0f\x2a\x67\xea\x1c\xa3\xe1\xf1\x7b\x05\x4e\x83\xe8\xdc\x1b\x4e\x8d\x33\x6c\xff\x13\x05\x1a\xed\xbf\x51\x7f\x16\xe4\x5d\xf5\xdd\x5f\xdf\xd1\x5e\x73\xb8\x5f\xc3\xe5\x7a\xb8\xb9\xe5\xf9\x1b\x9d\xf2\x3d\x77\xac\xde\xf0\xef\x6c\x9d\xef\x7d\x6f\x58\xb2\x86\x3b\xe2\xa0\xb8\x1f\x6b\xd5\x6a\x5c\x27\x0e\x5a\x22\x06\x35\x4c\x8e\x19\xb2\x23\x3a\x7b\xb6\x34\xff\xde\x09\xe1\x35\xfa\x9b\x83\x39\x38\xfc\x7a\x0f\x87\xf7\x4b\xf0\x5f\xe2\xf0\x7e\x90\x84\xc3\x17\x8f\xbe\xe6\x81\x5f\xbe\xff\x0d\x0e\x38\xaf\x56\xe1\x3e\x8a\x0e\xf4\x2f\x67\xac\xc6\x01\x71\xbd\x35\x8a\xba\xcc\xf0\xd5\x99\x7a\x92\x72\xbc\xa8\xef\x4c\xfd\x38\x94\x1f\x6c\x1f\x2e\x0a\x9a\xb8\xd9\x8c\x8a\x07\xd1\xda\x99\xfb\x25\x37\x73\xa2\xee\x4d\x65\x83\xed\x03\x19\x5c\x0c\x75\xa0\x1e\x1c\x76\xa8\x3f\x3b\x18\x7b\x7d\x76\x29\xe2\xc5\x59\xb4\xc2\x41\x6b\xfb\xbd\x66\xd7\x0c\x2e\x3b\x4b\x6b\x8e\xd1\x7a\x53\x67\xc8\x68\x4e\xd1\xde\x0b\x8d\x39\x3d\x2c\xc0\xb5\xd9\xdf\x92\x73\x9b\xdd\x94\x3b\xc1\x96\xd1\xfa\xf9\x3a\x88\xfa\xca\x98\x33\xac\xb9\x5b\xd0\x73\x71\xb4\xec\x3e\xac\xc1\x4e\x9c\x92\xb3\x67\x6f\xdf\x2b\x6f\xb5\xc5\xd9\x70\x61\x1c\x98\xb3\x38\xbf\x1e\x45\x57\x9c\x67\xb0\x5a\xcd\x95\xa8\xc3\x85\x5a\x5b\xef\x1a\x63\x78\xea\xd1\xf9\x0c\x72\xaf\x7b\xab\x05\xce\x05\xcb\xf9\xcd\xdd\x62\xc6\x02\x47\x71\xad\x39\x23\xae\x43\xcd\x53\x3d\x46\x73\x42\xb0\xa0\x6e\x0b\x6b\xb3\xc5\xc5\xdd\xd9\x8f\x92\x78\x3f\xcd\x32\xd1\xea\x4a\xd7\xc1\x39\x39\x2f\x64\xc7\x4b\xdd\x89\x58\xe4\x98\xb1\xc7\xc9\xc1\x74\xcc\x9d\x8e\x9c\xbb\x4a\x74\xc9\xe7\xc2\x9f\xe4\xa2\x83\xa9\x8d\xf7\x98\x7b\xb8\x23\xbf\xe1\x1c\x33\x08\x7b\xfb\xd1\x9e\xd1\xa5\xa6\xd5\x38\xc5\x7e\xfe\x12\xdf\xe8\x9e\xc1\xdc\xa0\x6d\x8d\xc3\xcb\x6a\x98\xa5\x18\x93\x39\x2f\xf7\x06\x2b\xdc\x95\xae\x44\x57\x0b\x74\xc4\xc6\xf6\xe3\xf4\xc9\xe1\x3b\x8b\x8d\x06\xc0\x81\xba\x0d\x8d\x39\x33\x5c\xa7\xee\x2e\xcf\x5d\x3c\xe7\x5d\xea\x94\xba\xaa\xb3\x18\x68\x23\xe5\xd0\xe5\xbd\xce\x3e\xe1\x77\x5d\x5b\x97\x83\x6b\x38\x1b\x9d\xa6\xcd\x5d\x82\xda\xa5\x6e\xb5\x18\xb7\xd1\x24\xb8\x24\x4d\xa2\xc3\xc5\x5c\x29\xe1\x0b\x47\x82\x75\xd5\x90\xf3\x82\x3f\xd4\x76\xed\xb3\xbe\xd0\x55\xee\x72\x68\x2e\xe9\xbc\x33\xbd\x26\x3c\x1b\x9b\xf3\x70\xbb\x71\x30\x9e\x32\x09\xd5\x83\x61\x08\xce\x60\x91\x9c\xb1\x36\x6c\x38\x13\x3f\x19\xbc\xe5\xb1\x70\x46\x6f\xfa\xa1\x7b\xf2\x9d\x8e\x98\x9c\x78\x34\xed\x51\x4f\xdc\x97\xbb\x91\xeb\xda\xe4\xc9\x69\x35\xad\x90\xaf\xa7\x3e\x8b\x4d\x4a\x23\x4e\x3d\x9b\xe6\xc0\x08\x37\x87\x6f\x74\xe2\x21\xd8\x14\xc1\x1e\x34\x87\x87\xc0\x57\x74\xc6\x44\x81\x06\xf0\x08\x3c\x80\x3d\x75\xae\x33\x1c\x80\xc7\x6e\x31\xbd\xd1\xf1\xc1\x07\x4d\x71\xbf\xb6\xb6\xbb\x45\x97\xa7\x80\xc5\xb4\x48\xcc\xd4\x65\xfc\x67\x4c\x98\x4a\xb8\x2f\x7e\x00\x27\x79\x46\xbe\x4c\x23\x2e\xda\x1d\xd0\xd8\xf0\xa6\x1f\x6f\x13\x14\xfc\x86\xcb\x4c\x4c\xd4\x1e\x4f\xe0\x5e\xf8\x6c\x97\x7d\x80\xc9\x8a\x3b\xe2\xd7\x70\x06\x3d\x92\x4f\x9a\x32\x2a\xbb\x1f\xf5\xe0\x6c\x3a\x27\xba\x20\xc7\xc4\xb9\xc5\xba\x20\x7e\x58\x67\x5f\x84\x73\x7e\xb2\x9a\x3b\x9f\xff\x5f\x91\xbd\xce\x67\x3d\xba\xac\x7f\x34\xc9\x3d\xd0\x09\x53\x1c\x5c\x4b\xba\xe8\x8d\x27\x78\x2a\xde\x98\xf8\xda\x59\xed\x53\xbc\xd6\x26\xbc\x98\xf9\x4e\x2e\xa9\xce\xb3\xf9\x2d\x5c\x1c\xb3\x26\x5c\x6f\x39\x25\xaf\x60\xca\x9c\xac\xd7\x30\x89\x52\x27\x9f\x27\x31\xd6\x87\xc9\xee\x8b\x8e\xd3\xe4\xd7\x58\x2e\xd4\x2a\x64\x6d\xe0\x2f\xc4\x49\x5e\xde\x18\xcf\x12\x2f\x7a\xab\x17\x7e\x4b\x4d\xc8\x1b\x0d\xac\x5d\xee\x1f\xf9\x3c\xf6\x25\x0d\x76\x56\x73\xea\x41\x7d\x92\x8e\xd1\xf8\x68\xfa\x05\x93\xc4\x75\x9f\xd7\xb3\xd6\x99\x10\x62\xee\x69\x31\x73\x13\x7c\xfe\x15\x00\x00\xff\xff\x59\x85\x72\x3c\x00\x10\x00\x00")

func bindata_go() ([]byte, error) {
	return bindata_read(
		_bindata_go,
		"bindata.go",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"1_init_database.down.sql": _1_init_database_down_sql,
	"1_init_database.up.sql": _1_init_database_up_sql,
	"2_users_table.down.sql": _2_users_table_down_sql,
	"2_users_table.up.sql": _2_users_table_up_sql,
	"3_sessions_table.down.sql": _3_sessions_table_down_sql,
	"3_sessions_table.up.sql": _3_sessions_table_up_sql,
	"bindata.go": bindata_go,
}
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() ([]byte, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"1_init_database.down.sql": &_bintree_t{_1_init_database_down_sql, map[string]*_bintree_t{
	}},
	"1_init_database.up.sql": &_bintree_t{_1_init_database_up_sql, map[string]*_bintree_t{
	}},
	"2_users_table.down.sql": &_bintree_t{_2_users_table_down_sql, map[string]*_bintree_t{
	}},
	"2_users_table.up.sql": &_bintree_t{_2_users_table_up_sql, map[string]*_bintree_t{
	}},
	"3_sessions_table.down.sql": &_bintree_t{_3_sessions_table_down_sql, map[string]*_bintree_t{
	}},
	"3_sessions_table.up.sql": &_bintree_t{_3_sessions_table_up_sql, map[string]*_bintree_t{
	}},
	"bindata.go": &_bintree_t{bindata_go, map[string]*_bintree_t{
	}},
}}
