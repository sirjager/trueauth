package migrations

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var __000001_init_database_down_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\xe5\x72\x09\xf2\x0f\x50\x70\x0b\xf5\x73\x0e\xf1\xf4\xf7\x53\x48\xcb\x8b\x2f\x2d\x48\x49\x2c\x49\x8d\x2f\xc9\xcc\x4d\x2d\x2e\x49\xcc\x2d\xb0\xe6\x02\x04\x00\x00\xff\xff\x77\x3e\x8a\xb9\x26\x00\x00\x00")

func _000001_init_database_down_sql() ([]byte, error) {
	return bindata_read(
		__000001_init_database_down_sql,
		"000001_init_database.down.sql",
	)
}

var __000001_init_database_up_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcd\xc1\x8a\xb3\x40\x10\x04\xe0\xf3\xf4\x53\x14\xc1\x43\x12\xf8\xf3\x02\xc3\x7f\x70\xb5\x75\x1b\xb2\x3d\xcb\x4c\x87\xe4\x26\x82\xae\x04\x4c\xd6\x45\x7d\xff\x45\xb2\xc7\x82\xfa\xaa\x8a\xc8\xb9\x31\xf8\x66\xac\x49\x82\x42\x2a\x68\x30\xf0\x4d\x92\x25\xec\xd6\xf5\xde\xfd\xfb\x9e\xe7\x69\xe7\x89\xfe\xca\x21\x22\xf2\xe7\x39\x2f\x18\xd5\x45\x0b\xdb\xd8\xd7\xb3\x59\xa7\xae\x5d\xfa\x66\xb9\x3f\xfa\x79\x69\x1f\xd3\xfe\x40\x91\xed\x12\x35\xc1\xa2\xd4\x35\x47\xe4\x09\x59\x46\x6f\x5c\x8b\x92\x93\x0a\xe1\x5c\x9e\x8e\x90\x84\x52\x92\x89\x16\x86\x2a\x86\x0f\x28\x5f\x4f\x47\xd8\x3b\x2b\x39\xe7\xdc\x16\x5f\xe3\x5d\xd3\x2e\xf8\x0f\x0d\xd7\xfd\xc1\x83\x1c\x6b\x09\xa9\x3c\xb9\xd7\xd1\x06\x3d\xb1\x96\x9e\xb2\x0c\x63\xfb\x1c\xd6\x76\xe8\x31\x8d\xd3\x30\xff\x8c\xf0\xf4\x1b\x00\x00\xff\xff\x93\xbe\xf0\xf8\xee\x00\x00\x00")

func _000001_init_database_up_sql() ([]byte, error) {
	return bindata_read(
		__000001_init_database_up_sql,
		"000001_init_database.up.sql",
	)
}

var __000002_users_table_down_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\xf0\x74\x53\x70\x8d\xf0\x0c\x0e\x09\x56\x50\x8a\x2f\x2d\x4e\x2d\x2a\x56\xb2\xe6\x02\x04\x00\x00\xff\xff\xbb\x3e\x7c\x30\x1f\x00\x00\x00")

func _000002_users_table_down_sql() ([]byte, error) {
	return bindata_read(
		__000002_users_table_down_sql,
		"000002_users_table.down.sql",
	)
}

var __000002_users_table_up_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x55\x5f\x4f\xdb\x3e\x14\x7d\x26\x9f\xe2\x2a\x2f\x6d\xa5\x1f\x28\x20\xf1\xf2\x43\x7b\x08\xad\x0b\xd1\xd2\x84\x05\x67\xc0\x5e\x22\xaf\x71\x21\xa2\x4d\x58\xec\x0e\xed\xdb\x4f\xd7\xf9\x67\xd2\xac\x49\x90\x78\xc0\xb7\xe7\x9c\x6b\x1f\x5f\x9f\xcc\x03\x62\x53\x02\xd4\xbe\x76\x09\x98\xd1\x5e\xf0\x5c\x98\x30\x35\x00\xcc\x24\x36\xe1\xfa\x89\x12\x1b\xee\x02\x67\x65\x07\x4f\xf0\x95\x3c\x81\xe7\x53\xf0\x42\xd7\xfd\x0f\x21\x7c\xc7\x92\xad\x09\xdf\xed\x60\x7e\x6b\x07\xd3\x8b\xcb\xcb\x19\x84\x9e\xf3\x2d\x24\x1f\x71\x28\x9b\xb2\x1d\xef\x83\x1a\x27\xe6\x0b\x13\x2f\x91\x60\x5b\xd9\xc2\x36\xa0\x12\xf3\xc6\x84\xf8\x27\x06\x9b\x6e\x92\x5c\xc8\x8e\xae\x15\x0a\x16\x64\x69\x87\x2e\x85\xc9\x44\x6d\x72\xcb\x86\xc3\x11\xff\x9b\xe7\xc9\x26\xe1\xe8\x92\xef\xbb\x87\xb8\x0d\xdb\x0a\xae\x94\x7f\x6e\xb3\xf5\x6b\x2f\x10\x91\xeb\x9c\x33\xc9\xe3\x88\x49\x13\xa8\xb3\x22\xf7\xd4\x5e\xdd\xd1\x1f\x87\x9c\x69\x9a\xbd\x4f\x67\xb3\xc2\xdd\xb7\x78\x24\x09\x59\x32\x7b\xe5\x69\xa4\x6e\x30\x52\x47\xf9\x63\x02\x25\x8f\xb4\xfb\xc0\x27\x25\x1e\x5d\x7f\xcf\xf2\x38\xca\xb9\xe0\x72\x08\xa3\xe8\xb0\x7e\x61\xe9\x33\x1f\x82\xc7\x59\x89\x62\xbe\xe5\x32\xc9\xd2\x63\x04\xe3\x44\x5d\x59\xfb\x08\xc7\x0c\x98\x5c\x58\x96\x75\x6a\x9d\x9f\x5a\xe7\x60\x59\xff\xab\x3f\xd5\x5a\x09\x1d\x9c\xed\xf3\x52\xad\x43\x7f\x5e\xa8\xed\xc6\x68\x25\x63\x76\x65\x18\xe5\x2b\x77\xbc\x05\x79\x04\xdf\xd3\x1e\xba\xf6\x4a\x66\x57\xc7\x70\xf5\xeb\xd0\xf4\x68\xe0\xdc\xdc\x90\x00\x64\xfe\x1c\x15\x43\x18\x35\xb3\x08\xd7\x64\xe9\x07\x04\xc2\xbb\x05\x62\x35\x35\x63\xe9\x07\x40\xec\xf9\x2d\x04\xfe\x03\x3c\xdc\x12\x0f\xa6\xbe\xbb\x38\x4b\x62\xf8\x02\x1e\x79\x38\x4b\xe2\x19\x90\x47\x32\x0f\x29\x81\x65\xe8\xcd\xa9\xe3\x7b\xb0\x49\xab\x1e\x32\xd9\x71\x21\xd9\xee\x6d\xaa\xf6\xe2\xaf\x56\xc4\xa3\xd8\x60\xee\xbb\xe1\xaa\xe9\x73\xa6\x22\xcc\xb9\x87\x09\x5b\xaf\xb3\x7d\x2a\x21\x89\x27\x3d\x8c\x32\xd1\x90\xb4\x4f\x93\x5f\x7b\x0e\xaa\x02\x2c\x8e\x73\x2e\x44\x1f\xbd\x09\x3a\x4d\xa1\x2a\xf6\x91\xb5\xe8\x43\x36\xfe\x87\xdc\x18\x36\x59\x0e\xf8\x63\x92\x3e\x0f\xd2\x28\xa2\x11\x35\x70\xc9\x63\xa8\x26\xbb\x8f\xad\x45\x26\xb2\xd5\x12\x86\x6c\xbd\xc9\x4e\xe4\xe1\x6a\x10\xad\x89\x50\xa4\x15\x4e\x57\x35\x10\x92\xc9\x7d\xaf\xe3\x75\xb6\xea\xf7\x5c\x16\x07\x4a\xe8\xa1\x8b\x2a\xe5\x1a\x98\x84\x7a\xd4\x7a\x2f\x5e\xcb\xe0\xda\x82\xb2\x38\x4a\xa8\x2b\x96\xdb\xe6\xac\x19\xa6\x01\x28\xe8\x30\xbd\x76\xb4\xa1\x62\x55\x03\x55\x1b\xa3\xf6\x31\xdd\x9a\xdd\x15\x95\x31\x4a\xad\x78\x53\x8f\x46\xf0\x1c\xaa\xd2\x30\xad\x8e\xcf\x40\x7d\x07\x5d\xbe\x0d\xbd\x8b\xce\xaf\x42\xad\xdc\xf6\x6f\x94\xea\xa1\x85\xda\x6e\x2b\x1f\x47\x29\x76\x58\x59\x0c\xe1\x47\x3f\x35\xcd\xbf\x01\x00\x00\xff\xff\x4c\x4f\xe7\x43\xfc\x09\x00\x00")

func _000002_users_table_up_sql() ([]byte, error) {
	return bindata_read(
		__000002_users_table_up_sql,
		"000002_users_table.up.sql",
	)
}

var __000003_sessions_table_down_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\xf0\x74\x53\x70\x8d\xf0\x0c\x0e\x09\x56\x50\x8a\x2f\x4e\x2d\x2e\xce\xcc\xcf\x2b\x56\xb2\xe6\x02\x04\x00\x00\xff\xff\x07\x0f\x4b\x8e\x22\x00\x00\x00")

func _000003_sessions_table_down_sql() ([]byte, error) {
	return bindata_read(
		__000003_sessions_table_down_sql,
		"000003_sessions_table.down.sql",
	)
}

var __000003_sessions_table_up_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x94\xcd\x6e\xa3\x30\x10\xc7\xef\x3c\xc5\x5f\x5c\x0a\xd2\xaa\x2f\x50\xed\x81\xc2\xa4\x45\x0b\xa6\x4b\x8d\xda\xee\x05\xb1\xc1\x49\xac\xa6\x10\x61\xef\xc7\xe3\xaf\x0c\x24\x81\x26\x6c\xc8\xd1\xf3\xf1\xf3\x78\xfc\x9f\xf1\x53\xf2\x38\x81\x7b\xf7\x11\xc1\xce\x95\x50\x4a\xd6\x95\xb2\xe1\x58\x80\x2d\x4b\x1b\xf7\x6f\x9c\x3c\x3c\xa5\x61\xec\xa5\x6f\xf8\x46\x6f\x60\x09\x07\xcb\xa2\xe8\x8b\x09\x69\xc4\xaa\x11\x6a\x93\xeb\xfa\x5d\x54\x36\x38\xbd\xf2\x71\x40\xb1\x5c\x0a\xa5\x3a\x7f\x7e\x04\x66\x2c\xfc\x9e\xd1\x74\xe8\x39\xd4\x72\x2b\x45\xa5\x73\xb9\x3b\xe7\xfc\xa5\x44\x93\x17\x6b\x51\xe9\x49\xef\xf1\xf6\x91\xef\xe7\xb6\x5e\xbe\x0b\xe3\x4b\x92\xe8\xe0\x42\x40\x0b\x2f\x8b\x38\x56\xc5\x56\x89\xd3\xa7\x88\xbf\x3b\xd9\x08\x95\x17\xe6\xbe\x30\xa6\x67\xee\xc5\x4f\xfc\xc7\x7f\xba\x33\x2f\x65\xd9\x88\x42\x8b\x72\x32\xe8\x50\x97\x53\xd5\x7f\x1c\xd7\xed\x9e\xb7\x2b\xaf\x4a\xb2\xdc\x3b\xcb\xf2\x22\x4e\xe9\x99\xaf\xf7\x82\x00\x8b\x24\xa5\xf0\x81\xb5\xff\xed\x1c\xba\xe7\x22\xa5\x05\xa5\xc4\x7c\x7a\x86\x9d\x1b\xb3\x91\x8a\xd1\x89\x01\xf6\x62\x0a\x59\x40\xaf\x48\xd8\x58\x4f\x47\xc8\xc5\xc8\xcf\x92\x31\x19\x96\x9f\xc4\x31\x31\x6e\xa2\xfd\x24\xca\xe2\x51\xd2\x6d\x2b\xd5\xf0\x19\x37\x7d\xc7\xd1\x26\x43\x96\x37\x77\x17\x53\x3f\x49\xf8\x84\x32\x03\x71\x22\x72\x03\xe9\x8c\xd7\x54\x32\x1e\x00\xc3\x50\x9b\xba\xd1\xd8\xca\xdf\xa2\xc4\x90\x37\x03\x36\x98\x16\x43\xea\x8e\x90\x3b\x14\x65\xd9\x08\xa5\x66\x20\x86\x33\x35\x60\x18\x33\x5a\xf3\x5c\xc6\xbe\x25\xb2\x44\xbd\x82\xde\x88\x9e\xa1\x94\x5c\x57\xa2\x84\xae\xa1\x37\x52\xa1\xcf\x9b\x81\x3d\x0c\x6d\xdb\xa5\xce\x0e\xa9\xd0\xdb\x51\x37\xa8\xea\x39\xf5\x4d\x0e\xb5\x01\xb7\xe7\x42\x1b\xb6\x96\x1f\xc2\x14\x7f\xe5\x2f\x4c\x6f\x80\x29\x3e\xae\x15\xdf\x70\x63\xb4\xbf\xd4\x9d\x51\xe8\x16\xaa\x74\xf1\xb1\xeb\xda\x7e\x55\x87\x87\x3b\xc5\x60\xb7\x85\xd2\xe8\x8d\x17\xd9\xfb\x09\xe7\x69\xf8\xf0\x40\x29\x74\xb3\xce\xbb\xdc\xfc\xc8\xc5\x3d\x99\x3d\x83\xec\x29\x30\xb1\xe3\x3d\x60\x2d\x92\x14\xe4\xf9\x8f\x48\x93\x17\xbc\x3c\x12\x83\x93\x44\xc1\xad\x2c\xf1\x15\x8c\x5e\x6e\x65\xe9\x82\x5e\xc9\xcf\x38\x61\x91\x31\x9f\x87\x09\xc3\xaa\xda\x5f\x73\x28\xcf\x71\xef\xac\x7f\x01\x00\x00\xff\xff\xa1\x28\x77\x21\xe7\x06\x00\x00")

func _000003_sessions_table_up_sql() ([]byte, error) {
	return bindata_read(
		__000003_sessions_table_up_sql,
		"000003_sessions_table.up.sql",
	)
}

var _bindata_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x97\x4b\x8f\x1b\xcb\x0d\x85\xd7\xea\x5f\xd1\x11\x70\x03\x09\x18\x4c\xfa\xfd\xb8\xc0\x6c\xee\x45\xb6\x59\x64\x1b\x06\x42\x55\x77\xd5\x40\xc8\x8c\x34\xd6\xe3\x9a\x76\xe0\xff\x1e\x7c\xcd\x52\x6c\x07\x63\x1b\xf1\x03\x90\xa5\xee\x7a\x90\x3c\x3c\x3c\xe4\xbc\xb8\xe9\x5f\xee\x31\xe4\xcf\xfb\xc7\x93\xbb\xec\x8f\x87\x73\x96\xed\x9f\x5f\x8e\xa7\x4b\xbe\xc9\x56\x6b\xff\xee\x12\xce\xeb\x6c\xb5\x9e\x8e\xcf\x2f\xa7\x70\x3e\xff\xe5\xf1\xfd\xfe\x85\x17\xf1\xf9\xc2\xd7\xfe\xc8\xff\xe7\xcb\x69\x7f\x78\x3c\xaf\xb3\x6d\x96\xc5\xeb\x61\xca\xfd\xfe\x30\xbb\x8b\xdb\x9d\x82\x9b\x37\xfc\xca\xff\xf1\x4f\xee\xba\xcb\x0f\xee\x39\xe4\xb6\x7f\x9b\x6f\x6e\x6f\xc3\xe9\x74\x3c\x6d\xf3\x7f\x67\xab\xc7\xf7\xcb\x53\xfe\xeb\x43\x8e\xa9\xfb\xbf\x85\xb7\x7f\x0f\x6e\x0e\xa7\xcd\xe2\x0b\xcf\xbf\x5d\x63\x0c\xa7\xe5\xda\xed\x36\x5b\xed\xe3\x72\xe0\x4f\x0f\xf9\x61\xff\xc4\x15\xab\x53\xb8\x5c\x4f\x07\x1e\xef\xf2\xf8\x7c\xb9\xff\x2b\xb7\xc7\xcd\x9a\x8b\xf2\x5f\xde\xfc\x9a\xff\xf2\xc7\xda\x3c\x59\x6c\x6d\xb3\xd5\x87\x2c\x5b\xfd\xe1\x4e\xb9\xbf\xc6\xdc\xec\x98\x91\x6c\xb5\x33\x77\x1e\xf2\xfd\xf1\xfe\xf7\xe3\xcb\xbb\xcd\x9f\xfd\x35\xde\xe5\x8f\xef\xb7\xf8\x7a\xff\xfb\xd3\xf1\x1c\x36\xdb\xec\xe7\xb9\x91\x4e\xf9\x6b\xbc\xff\x0d\x4f\x36\xdb\x3b\xae\xc8\x3e\x64\x19\x1e\xee\x76\x05\xff\xca\xdd\xfe\xb0\xbf\xec\xc0\xc0\xbb\x73\xd8\xcd\xc7\xb7\x87\xdd\xf9\xcd\x53\xfe\x90\x90\xde\xac\x45\xcb\x28\x3a\x78\xd1\x62\x10\x2d\x8a\xd7\x3f\x31\x8a\xce\x95\xe8\xdc\x8a\x86\x56\xb4\xaf\x44\x8b\x51\x34\xf2\x1d\x45\xdb\x42\xb4\x67\xaf\x17\x8d\xac\xd7\xa2\x45\x10\x8d\xa5\x68\x6c\x44\x63\x2f\xda\xd6\xa2\xcd\x20\x3a\x79\xb3\x57\x45\xd1\x6a\xb6\x77\xcd\x28\x5a\x4d\xf6\x3d\xcc\xb6\x36\x8d\xa2\x13\xef\x66\xdb\x57\x05\x5b\xe7\x1d\xcf\xbe\x10\x0d\x9d\x68\x81\x0f\xcd\xe7\xbe\xf2\xe9\x7b\xd1\x3a\x88\x0e\x4e\xd4\x73\x7f\xf7\x69\x4c\xeb\x1b\x09\xbf\x8e\xd4\xe6\x55\xfa\xdd\xd0\xff\x94\xbf\xd9\x6a\xf5\x0d\xd4\xef\xb2\xd5\x6a\xfd\xda\x8e\x7b\x76\xdc\x9f\xdf\x3c\xad\xef\xb2\xd5\xf6\x1b\x39\xbc\xbe\x7c\x77\x06\x41\x78\x9a\x45\xa7\x32\xa1\x42\x46\x0a\xd1\xb2\x30\x04\x03\xfb\x6a\xcb\x18\xd9\x2a\x1b\xdb\xdb\xf0\xbb\x12\x8d\x83\xad\x83\xf8\x54\x8b\xf6\xd1\xb2\xee\xc9\x78\x2b\x5a\x7a\x51\x5f\x89\xd6\xb3\x65\xb9\x99\x44\x87\x5e\x34\x34\x86\xfe\x50\x89\xba\x60\xb6\x58\x9b\x3b\xd1\x86\xb3\xb3\xf9\xc7\x6f\xce\x4f\xbd\xed\x8d\x4e\xd4\x39\xf3\x75\x1a\x2c\x8b\x75\x69\x7e\x74\x9d\xa8\xbb\x31\xa6\x12\x6d\x2a\xd1\xca\x89\x76\x83\x68\x4d\x1c\x85\x31\x67\xe4\x3d\xac\x4d\xf6\x60\xe7\x0c\x33\xb1\xe9\x45\xc7\x20\x1a\x7a\xd1\x6e\xb4\xef\x01\x56\x07\xd1\xc9\x89\x56\xa5\x68\x55\x19\xcb\x59\xab\x47\x63\x66\x39\x58\x25\xe0\x2f\x8c\x9f\xf9\xf0\xae\x37\x4c\xdb\x51\xd4\xf5\x16\x6b\x3b\x5b\x1c\xf8\xbb\xf8\x1f\xed\xb9\x1f\xcd\x26\xb9\x9b\x6b\xb3\x49\x2e\xc6\x52\x34\xcc\x86\x77\xdd\x1a\xfe\x8e\xca\x6b\xec\xb9\x49\x78\x52\x7d\xd8\x69\x3a\xd1\x8e\x0a\x9c\x8c\x03\xc4\x3b\x92\x23\x27\x1a\x4a\x7b\x4f\x8c\x43\x10\x1d\x0b\xd1\x81\xdc\x56\xb6\x8f\x58\x4b\xf2\xd2\x19\x76\x7c\x53\xcd\xd5\x20\xda\x92\x8f\x68\xf6\x88\xad\xa6\x62\xbd\x61\x00\x16\xf3\x64\x67\xd9\x17\x6a\x8b\x93\x38\xa8\x52\xf2\xc3\x3d\xc5\x6c\x98\xc4\x1b\xe7\xe0\xd1\x24\xda\x79\xf3\xdf\x81\xc7\x64\xb8\xb0\x6f\x2e\x45\x8b\xce\xf8\xe3\x4b\xd1\xb1\x33\xdf\xe1\x44\xc1\xb9\xda\x72\x56\xa6\x5c\xf6\x9d\x68\x18\x8c\x13\x43\xb2\x5f\x27\xae\x0f\x93\x71\x00\x2e\xc3\xcb\xff\x55\x07\x30\xf2\x21\xed\x19\x44\x43\xf8\x3f\xd4\xc1\x6a\xf0\x67\x68\x83\xdd\xf4\x65\x65\xb8\xbe\x7c\x49\x17\xaa\xdd\xf5\x1c\x4e\xe7\xdd\xc5\xf9\xa7\x1f\x54\xf6\xd7\xd4\x9c\x33\x7d\x29\xda\x37\xf6\x9e\xdf\x6d\x6b\x78\xf5\x49\x1f\xa8\x7d\x70\xe7\x1d\xf9\x41\xf1\x17\x5e\x76\x76\x07\x75\xfb\x5f\x95\x0f\x49\xc5\x9d\xad\x93\xd3\xaf\xa9\xb7\xf7\xa6\xde\xfd\x64\x39\x25\x96\x2f\xe6\xe7\x75\x2c\xbe\x27\x3f\xaf\xdf\xf4\x31\x3f\x9f\xad\x7f\x55\xb7\x3f\xbf\xe9\x07\x54\x7b\x9c\x0c\xf9\x5b\x45\xce\x09\x19\xd4\x19\xe5\x44\x59\x47\xaa\x30\x29\x20\x88\x77\xb3\xa8\x6b\xcd\x06\xd5\x5c\x15\xa9\x17\x57\xa6\xe6\x7d\xb2\xeb\xe6\xa4\x60\xa5\xf5\x77\xd4\xa1\x68\x45\xbb\x5e\x74\x2a\x44\xdb\x60\x0a\xe8\xa2\x31\xa0\x4a\x6a\x84\xb2\xb6\x83\xa9\x2a\x59\x47\xb1\xf0\x6b\xf1\x8f\x8a\x1f\xed\x0e\xee\xbc\xa9\x34\xea\xd3\x0f\x76\xaf\xef\x4d\x45\xc6\xa4\x06\xf8\x49\x7c\xc4\x41\x7f\x2f\x6a\xd1\xae\x32\x96\x15\x49\xfd\xa8\x56\x2a\x1e\x86\x8d\x83\xf9\xdc\xa6\x0a\x5e\x54\x2e\x29\x3f\x2a\x09\x76\xcb\x9c\x80\x6a\x76\xa6\x84\xa8\xee\xa2\x78\x95\x29\xc2\x52\xf1\x95\xf9\xd9\x71\xa6\x37\xff\xb9\x6f\x6c\x4d\x99\x86\xd2\xfc\xc4\x8f\xa5\xa3\x54\x1f\x15\x6d\x51\xca\xd2\x18\x4a\xc7\x42\x51\x17\x3c\x51\xb3\x68\x98\x74\xc4\x1c\x92\xe2\xf5\xa6\x50\xe4\x7c\x4a\x9f\x72\x34\xcc\x51\x39\x3a\xeb\x52\x21\x8d\xe1\xb1\xe0\x3d\x88\x8e\xa9\xab\x96\xb3\x68\x88\x49\x45\xc9\x73\x9f\x2a\x88\x7b\x6a\xcb\x3b\xdd\x03\x9b\x2d\x39\x65\x56\xaa\x2c\x7e\x57\xa4\x0e\x5e\x8b\x4e\x9d\xd9\x44\xf5\xb8\x03\xc5\xc5\x46\x17\x2c\x06\xb0\xa4\xdb\xd2\x31\xe8\x60\x65\x6b\xdd\x04\xb5\xef\x1a\xeb\x5a\x74\x75\x94\x7e\x68\x6d\x4e\x6b\x1a\xe3\x1c\x4a\xb2\xcc\x77\x9d\x4d\x08\x65\x99\x38\xec\x0d\xc7\x29\xcd\x61\xe4\x03\xe5\xc6\x5e\x48\xd5\xce\x9d\x7e\x48\x5d\xc3\x9b\x4d\xec\x8f\x8d\x4d\x1a\xf8\x47\x77\xa5\x83\x77\x69\x7e\x2c\x6f\x1d\xd3\x1b\x97\xea\xda\x6c\xd0\x91\x86\x34\x57\x82\x8d\x1b\xec\xec\xd2\xcd\x7b\xe3\x13\xdc\x99\x67\xe3\xd1\x52\x8b\x37\x3e\xc2\x2f\xa6\xa3\xd9\xf8\xd0\xa5\xae\x0e\x96\xec\x87\xbb\xf0\xb8\xfa\xa4\x0b\xd7\x95\xd5\x14\xb3\x31\xe7\x5d\x63\xfe\xc2\x47\xba\x6d\x73\xab\x89\xc4\x67\x26\x92\x81\xb8\x1b\xeb\x68\xd4\x04\xb9\xe0\x7d\x99\xa6\x06\x62\x9e\xa2\xd5\x6c\x3d\xd8\x44\x42\xa7\x64\x4a\x5b\x14\x9b\xfa\xad\x0d\x47\x7f\xe3\x19\x58\x8c\x86\xc3\x12\x53\x9a\xa6\xf0\x11\xee\x53\x53\xd4\x11\x7e\xe2\x33\x58\x51\xa3\x8b\x5f\x8d\xe1\x46\x2e\xb1\xcf\x99\x98\x74\x82\x3b\x8a\x54\x63\xf0\x83\xda\xa7\x3b\x33\xf5\x75\x4e\x74\x9c\xad\x76\x5b\x97\xa6\xa9\x22\x9d\x8f\xa2\xce\xdb\xd4\xc3\xc4\xc4\x3a\x98\xc1\x65\xb0\xa6\x46\xe0\x64\x9b\x6a\xa7\x49\x53\x25\xb9\x21\x67\xac\xc3\x57\xa6\x3a\xb0\xc1\x4f\x34\x80\x7a\x65\x0a\x23\x0e\xa6\x12\x66\x7d\x3f\x99\x76\x31\x59\x11\xcb\x9c\x26\x2b\xf0\xf4\x4e\x34\x32\x6d\xa6\x49\xac\xed\x2d\x26\x3a\x18\x7c\x82\x3f\x73\x9a\x16\xb0\x05\xc6\x4c\x38\x7c\xc6\xa4\xc5\x70\x9f\x29\x8d\xe9\x83\x9a\x58\xa6\xe2\xc1\xf4\x06\x7e\x14\x69\x02\x64\x1f\x39\xa0\xde\xf1\x03\xde\xc0\xef\x45\x57\xd3\x54\x57\xa7\x58\x6e\xfb\x98\xfc\xd0\x52\x38\x82\x06\x14\xc9\x16\x3a\x58\x27\x3f\xca\xd4\x9d\x5d\x67\x39\x5c\x3a\x24\x1c\xf7\x76\xef\x32\x75\x55\x16\x2f\x18\xdc\xd6\xe8\x0b\x65\xd2\x5f\x78\x58\xa7\x7b\xaa\xd1\xf4\x0d\x2c\xe1\x10\x7f\x19\xb8\x54\x3b\x70\x19\x4e\x51\x3f\xce\xcb\x7f\x02\x00\x00\xff\xff\x19\x23\x68\xcc\x00\x10\x00\x00")

func bindata_go() ([]byte, error) {
	return bindata_read(
		_bindata_go,
		"bindata.go",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"000001_init_database.down.sql": _000001_init_database_down_sql,
	"000001_init_database.up.sql": _000001_init_database_up_sql,
	"000002_users_table.down.sql": _000002_users_table_down_sql,
	"000002_users_table.up.sql": _000002_users_table_up_sql,
	"000003_sessions_table.down.sql": _000003_sessions_table_down_sql,
	"000003_sessions_table.up.sql": _000003_sessions_table_up_sql,
	"bindata.go": bindata_go,
}
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() ([]byte, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"000001_init_database.down.sql": &_bintree_t{_000001_init_database_down_sql, map[string]*_bintree_t{
	}},
	"000001_init_database.up.sql": &_bintree_t{_000001_init_database_up_sql, map[string]*_bintree_t{
	}},
	"000002_users_table.down.sql": &_bintree_t{_000002_users_table_down_sql, map[string]*_bintree_t{
	}},
	"000002_users_table.up.sql": &_bintree_t{_000002_users_table_up_sql, map[string]*_bintree_t{
	}},
	"000003_sessions_table.down.sql": &_bintree_t{_000003_sessions_table_down_sql, map[string]*_bintree_t{
	}},
	"000003_sessions_table.up.sql": &_bintree_t{_000003_sessions_table_up_sql, map[string]*_bintree_t{
	}},
	"bindata.go": &_bintree_t{bindata_go, map[string]*_bintree_t{
	}},
}}
