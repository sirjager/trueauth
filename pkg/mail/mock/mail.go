// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/sirjager/trueauth/pkg/mail (interfaces: Sender)
//
// Generated by this command:
//
//	mockgen -package mockmail -destination pkg/mail/mock/mail.go github.com/sirjager/trueauth/pkg/mail Sender
//

// Package mockmail is a generated GoMock package.
package mockmail

import (
	reflect "reflect"

	mail "github.com/sirjager/trueauth/pkg/mail"
	gomock "go.uber.org/mock/gomock"
)

// MockSender is a mock of Sender interface.
type MockSender struct {
	ctrl     *gomock.Controller
	recorder *MockSenderMockRecorder
}

// MockSenderMockRecorder is the mock recorder for MockSender.
type MockSenderMockRecorder struct {
	mock *MockSender
}

// NewMockSender creates a new mock instance.
func NewMockSender(ctrl *gomock.Controller) *MockSender {
	mock := &MockSender{ctrl: ctrl}
	mock.recorder = &MockSenderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSender) EXPECT() *MockSenderMockRecorder {
	return m.recorder
}

// SendMail mocks base method.
func (m *MockSender) SendMail(arg0 mail.Mail) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendMail", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendMail indicates an expected call of SendMail.
func (mr *MockSenderMockRecorder) SendMail(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendMail", reflect.TypeOf((*MockSender)(nil).SendMail), arg0)
}
