// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.2

package sqlc

import (
	"time"

	"github.com/google/uuid"
)

type Emailrecord struct {
	// email uuid
	ID uuid.UUID `json:"id"`
	// email address
	Email string `json:"email"`
	// email verified or not
	Verified bool `json:"verified"`
	// confirmation token
	Token string `json:"token"`
	// last time verification requested
	LastTokenSentAt time.Time `json:"last_token_sent_at"`
	// created at timestamp
	CreatedAt time.Time `json:"created_at"`
	// last updated at timestamp
	UpdatedAt time.Time `json:"updated_at"`
}

type Iprecord struct {
	// record uuid
	ID uuid.UUID `json:"id"`
	// user uuid
	UserID uuid.UUID `json:"user_id"`
	// list of all allowed ip address for this user
	AllowedIps []string `json:"allowed_ips"`
	// list of all blocked ip address for this user
	BlockedIps []string `json:"blocked_ips"`
	// confirmation token
	Token string `json:"token"`
	// created at timestamp of this session
	CreatedAt time.Time `json:"created_at"`
	// last updated at timestamp of this session
	UpdatedAt time.Time `json:"updated_at"`
}

type Session struct {
	// refresh token id
	ID uuid.UUID `json:"id"`
	// refresh token
	RefreshToken string `json:"refresh_token"`
	// access token id
	AccessTokenID uuid.UUID `json:"access_token_id"`
	// short life access token
	AccessToken string `json:"access_token"`
	// client ip address
	ClientIp string `json:"client_ip"`
	// client user agent
	UserAgent string `json:"user_agent"`
	// user id to whom this session is assigned to
	UserID uuid.UUID `json:"user_id"`
	// session is blocked or not
	Blocked bool `json:"blocked"`
	// expiration time of access token
	AccessTokenExpiresAt time.Time `json:"access_token_expires_at"`
	// expiration time of a refresh token
	RefreshTokenExpiresAt time.Time `json:"refresh_token_expires_at"`
	// created at timestamp of this session
	CreatedAt time.Time `json:"created_at"`
	// last updated at timestamp of this session
	UpdatedAt time.Time `json:"updated_at"`
}

type User struct {
	// user id
	ID uuid.UUID `json:"id"`
	// unique email
	Email string `json:"email"`
	// unique username
	Username string `json:"username"`
	// hashed password
	Password string `json:"password"`
	// first name can be empty
	Firstname string `json:"firstname"`
	// last name can be empty
	Lastname string `json:"lastname"`
	// created at timestamp
	CreatedAt time.Time `json:"created_at"`
	// last updated at timestamp
	UpdatedAt time.Time `json:"updated_at"`
}
